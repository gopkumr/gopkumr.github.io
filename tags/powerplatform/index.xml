<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>PowerPlatform on Beneath Abstraction</title>
    <link>https://www.beneathabstraction.com/tags/powerplatform/</link>
    <description>Recent content in PowerPlatform on Beneath Abstraction</description>
    <image>
      <title>Beneath Abstraction</title>
      <url>https://www.beneathabstraction.com/images/logo.png</url>
      <link>https://www.beneathabstraction.com/images/logo.png</link>
    </image>
    <generator>Hugo -- 0.148.1</generator>
    <language>en</language>
    <lastBuildDate>Sun, 19 Jun 2022 19:23:15 +1000</lastBuildDate>
    <atom:link href="https://www.beneathabstraction.com/tags/powerplatform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Securely calling Azure API from PowerApp Portal</title>
      <link>https://www.beneathabstraction.com/post/powerportalapicall/</link>
      <pubDate>Sun, 19 Jun 2022 19:23:15 +1000</pubDate>
      <guid>https://www.beneathabstraction.com/post/powerportalapicall/</guid>
      <description>&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;
&lt;p&gt;Powerapps Portal gives a quick and easy way to build public facing websites. Data in the portal is mostly fetched from Microsoft Dataverse using Powerplatform FetchXML or the portal&amp;rsquo;s Web API. These operations are secured using portal&amp;rsquo;s application session, as explained &lt;a href=&#34;https://docs.microsoft.com/en-us/power-apps/maker/portals/web-api-overview&#34;&gt;here&lt;/a&gt;. Often there are requirements to consume an externally hosted API, in this particular example an API hosted in Azure behind an API Management. With Javascript the only option to trigger an API, implementing a secret based authentication is out of scope. But there is an alternate approach.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
