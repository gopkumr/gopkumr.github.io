<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>azure on Beneath Abstraction</title><link>https://www.beneathabstraction.com/tags/azure/</link><description>Recent content in azure on Beneath Abstraction</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><lastBuildDate>Tue, 22 Jun 2021 10:18:48 +1100</lastBuildDate><atom:link href="https://www.beneathabstraction.com/tags/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing Custom Feature flags - Your own logic to shutoff a feature - Azure App Configuration</title><link>https://www.beneathabstraction.com/post/azurecustomfeatureflags/</link><pubDate>Tue, 22 Jun 2021 10:18:48 +1100</pubDate><guid>https://www.beneathabstraction.com/post/azurecustomfeatureflags/</guid><description>This is a continuation from the previous article on feature flags implemented using Azure App configuration service to maintain the flags. Just to reiterate, feature management can be implemented using config files but this article is trying to implement feature flags connecting to Azure App configuration service.
Introduction The previous article described about implementing a boolean feature flag to turn on/off a feature. In this article I am trying to implement a custom feature flag.</description></item><item><title>Implementing Feature flags using azure</title><link>https://www.beneathabstraction.com/post/azurefeatureflags/</link><pubDate>Sun, 16 May 2021 10:00:48 +1100</pubDate><guid>https://www.beneathabstraction.com/post/azurefeatureflags/</guid><description>Feature flag is a very popular practice in modern application development, which is used to specifically hide features implemented that are not yet ready to be used by wider audience, and when ready can be enabled by a flip of a switch. The flags can also be used as a kill switch for application feature when it not working as expected.
With feature flags implemented, it would be effective to have the features enabled or disabled from a location outside of the application infrastructure or configuration, this way we can have features spanning across applications be controlled via a centralized flag.</description></item><item><title>Azure for integration and process automation</title><link>https://www.beneathabstraction.com/post/azureintegration/</link><pubDate>Sun, 21 Jun 2020 18:52:19 +1100</pubDate><guid>https://www.beneathabstraction.com/post/azureintegration/</guid><description>Problem Businesses run on multiple applications and services, how well the business runs is often impacted on how efficiently data is distributed to the correct task. Automating this flow of data is a way to streamline the business. The problem here is to choose the right technology for this data integration and process automation.
Objective This article is describing the azure technologies that are available during time of writing to solve the business need.</description></item></channel></rss>