<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>azure on Beneath Abstraction</title><link>https://www.beneathabstraction.com/tags/azure/</link><description>Recent content in azure on Beneath Abstraction</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><lastBuildDate>Tue, 12 Oct 2021 17:20:59 +1100</lastBuildDate><atom:link href="https://www.beneathabstraction.com/tags/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>How to move azure resources between resource groups</title><link>https://www.beneathabstraction.com/post/moveresources/</link><pubDate>Tue, 12 Oct 2021 17:20:59 +1100</pubDate><guid>https://www.beneathabstraction.com/post/moveresources/</guid><description>Problem While working with Azure cloud platform, often there will be instances where resources needs moving across resource groups for maintenance reasons or because of re-organising of products. There might even cases where the resource may need to be moved across subscriptions.
Solution In Azure resources can be moved across resource groups from the portal UI or Azure CLI or powershell or from the rest APIs. Moving the resource using the portal UI is as easy as going throught a wizard like steps and clicking finish at the end of it.</description></item><item><title>Deploying 'JUST' the modified ARM templates</title><link>https://www.beneathabstraction.com/post/selectedarmdeployment/</link><pubDate>Sun, 05 Sep 2021 10:00:46 +1000</pubDate><guid>https://www.beneathabstraction.com/post/selectedarmdeployment/</guid><description>Problem The project has a bunch of ARM templates as part of IAC scripts and more often only couple, if not few templates get modified. But when deploying using Azure pipeline all the templates gets deployed. Even though ARM template deployment support incremental mode, if a templates is deployed with exact same properties, the resource gets recreated. The project does not want to recreate all the templates when only a few are changed.</description></item><item><title>Identity in Microsoft Azure - Modern Authentication</title><link>https://www.beneathabstraction.com/post/securingusingazure-part2/</link><pubDate>Sun, 01 Aug 2021 18:06:02 +1000</pubDate><guid>https://www.beneathabstraction.com/post/securingusingazure-part2/</guid><description>Introduction Continuing from the previous post, the new generation of authentication mechanism was created to satisfy the new generation of application, starting from apps that run just in the browser to apps that run on micro-controllers. This new generation of authentication mechanism called as the modern authentication protocols are built on top of the OAuth protocol and taking inspiration from SAML. In the below article the term IDP refers to the Identity provider, the external service that is responsible for authenticating a user and issuing authorization tokens.</description></item><item><title>Identity in Microsoft Azure - A bit of history</title><link>https://www.beneathabstraction.com/post/securingusingazure-part1/</link><pubDate>Sat, 24 Jul 2021 19:16:16 +1000</pubDate><guid>https://www.beneathabstraction.com/post/securingusingazure-part1/</guid><description>Introduction Authentication has been an important component in the world of IT from the time companies required their employees to prove their identity to use the company&amp;rsquo;s computing resources whether it was to execute its business processes or accessing email or file. During the earlier days employees used to login to their computers using a username and password, which was stored in a central server like an active directory (in case of Microsoft tech stack).</description></item><item><title>Cloud Resume Challenge - Azure Serverless</title><link>https://www.beneathabstraction.com/post/azureserverlessresume/</link><pubDate>Mon, 28 Jun 2021 10:18:48 +1100</pubDate><guid>https://www.beneathabstraction.com/post/azureserverlessresume/</guid><description>I recently came across the site https://cloudresumechallenge.dev/ and decided to give it a try using Azure services. To start simple I decided to ignore the DB, CDN part etc and just have the the UI and the middler layer of the app. Below is the high level architecture.
The front end of the app will be hosted a static web site in Azure Blob storage. Backend will be an Azure function that will feed the resume data to the frontend over HTTP, the azure function will be a HTTP triggered function.</description></item><item><title>Implementing Custom Feature flags - Your own logic to shutoff a feature - Azure App Configuration</title><link>https://www.beneathabstraction.com/post/azurecustomfeatureflags/</link><pubDate>Tue, 22 Jun 2021 10:18:48 +1100</pubDate><guid>https://www.beneathabstraction.com/post/azurecustomfeatureflags/</guid><description>This is a continuation from the previous article on feature flags implemented using Azure App configuration service to maintain the flags. Just to reiterate, feature management can be implemented using config files but this article is trying to implement feature flags connecting to Azure App configuration service.
Introduction The previous article described about implementing a boolean feature flag to turn on/off a feature. In this article I am trying to implement a custom feature flag.</description></item><item><title>Implementing Feature flags using azure</title><link>https://www.beneathabstraction.com/post/azurefeatureflags/</link><pubDate>Sun, 16 May 2021 10:00:48 +1100</pubDate><guid>https://www.beneathabstraction.com/post/azurefeatureflags/</guid><description>Feature flag is a very popular practice in modern application development, which is used to specifically hide features implemented that are not yet ready to be used by wider audience, and when ready can be enabled by a flip of a switch. The flags can also be used as a kill switch for application feature when it not working as expected.
With feature flags implemented, it would be effective to have the features enabled or disabled from a location outside of the application infrastructure or configuration, this way we can have features spanning across applications be controlled via a centralized flag.</description></item><item><title>Azure for integration and process automation</title><link>https://www.beneathabstraction.com/post/azureintegration/</link><pubDate>Sun, 21 Jun 2020 18:52:19 +1100</pubDate><guid>https://www.beneathabstraction.com/post/azureintegration/</guid><description>Problem Businesses run on multiple applications and services, how well the business runs is often impacted on how efficiently data is distributed to the correct task. Automating this flow of data is a way to streamline the business. The problem here is to choose the right technology for this data integration and process automation.
Objective This article is describing the azure technologies that are available during time of writing to solve the business need.</description></item></channel></rss>