<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on Beneath Abstraction</title><link>https://www.beneathabstraction.com/tags/security/</link><description>Recent content in Security on Beneath Abstraction</description><generator>Hugo</generator><language>en-au</language><lastBuildDate>Mon, 01 Jul 2024 00:55:38 +0000</lastBuildDate><atom:link href="https://www.beneathabstraction.com/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Securely calling Azure API from PowerApp Portal</title><link>https://www.beneathabstraction.com/post/powerportalapicall/</link><pubDate>Sun, 19 Jun 2022 19:23:15 +1000</pubDate><guid>https://www.beneathabstraction.com/post/powerportalapicall/</guid><description>Context Powerapps Portal gives a quick and easy way to build public facing websites. Data in the portal is mostly fetched from Microsoft Dataverse using Powerplatform FetchXML or the portal&amp;rsquo;s Web API. These operations are secured using portal&amp;rsquo;s application session, as explained here. Often there are requirements to consume an externally hosted API, in this particular example an API hosted in Azure behind an API Management. With Javascript the only option to trigger an API, implementing a secret based authentication is out of scope.</description></item><item><title>Client Certificate authentication using Azure API Management</title><link>https://www.beneathabstraction.com/post/clientcertauthapim/</link><pubDate>Sun, 27 Feb 2022 20:03:08 +1100</pubDate><guid>https://www.beneathabstraction.com/post/clientcertauthapim/</guid><description>Introduction APIs have become so popular that almost all websites and applications rely on APIs to get data from server. Often user impersonation is used to authenticate as well as authorize access to the resource exposed by an API, but there are also use cases where application itself needs data from an API for functioning. Currently the most used authentication mechanism is OAuth, where identity management is performed by a third provider and both the client and resource server trusts this identity provider.</description></item><item><title>Identity in Microsoft Azure - Modern Authentication</title><link>https://www.beneathabstraction.com/post/securingusingazure-part2/</link><pubDate>Sun, 01 Aug 2021 18:06:02 +1000</pubDate><guid>https://www.beneathabstraction.com/post/securingusingazure-part2/</guid><description>Introduction Continuing from the previous post, the new generation of authentication mechanism was created to satisfy the new generation of application, starting from apps that run just in the browser to apps that run on micro-controllers. This new generation of authentication mechanism called as the modern authentication protocols are built on top of the OAuth protocol and taking inspiration from SAML. In the below article the term IDP refers to the Identity provider, the external service that is responsible for authenticating a user and issuing authorization tokens.</description></item><item><title>Identity in Microsoft Azure - A bit of history</title><link>https://www.beneathabstraction.com/post/securingusingazure-part1/</link><pubDate>Sat, 24 Jul 2021 19:16:16 +1000</pubDate><guid>https://www.beneathabstraction.com/post/securingusingazure-part1/</guid><description>Introduction Authentication has been an important component in the world of IT from the time companies required their employees to prove their identity to use the company&amp;rsquo;s computing resources whether it was to execute its business processes or accessing email or file. During the earlier days employees used to login to their computers using a username and password, which was stored in a central server like an active directory (in case of Microsoft tech stack).</description></item><item><title>ASP.Net MVC 5 and Security</title><link>https://www.beneathabstraction.com/post/mvc5security/</link><pubDate>Sat, 14 Oct 2017 10:51:44 +1100</pubDate><guid>https://www.beneathabstraction.com/post/mvc5security/</guid><description>Security? Security is one of the most important cross-cutting concern for any web application. All applications (except for static web sites) require to identify a user and restrict the users from viewing or performing actions on pages.
Authentication Authentication is the method by which an application identifies a user. By identifying a user, the application can decide whether the user is a valid user to access the application.
Authorization Authorization is the way the application decides if the identified user can view a particular page or perform a particular action.</description></item></channel></rss>