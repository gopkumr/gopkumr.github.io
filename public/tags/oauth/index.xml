<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OAuth on Beneath Abstraction</title>
    <link>http://localhost:1313/tags/oauth/</link>
    <description>Recent content in OAuth on Beneath Abstraction</description>
    <generator>Hugo</generator>
    <language>en-au</language>
    <lastBuildDate>Sat, 22 Jun 2024 11:22:46 +1000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/oauth/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Securely calling Azure API from PowerApp Portal</title>
      <link>http://localhost:1313/post/powerportalapicall/</link>
      <pubDate>Sun, 19 Jun 2022 19:23:15 +1000</pubDate>
      <guid>http://localhost:1313/post/powerportalapicall/</guid>
      <description>Context Powerapps Portal gives a quick and easy way to build public facing websites. Data in the portal is mostly fetched from Microsoft Dataverse using Powerplatform FetchXML or the portal&amp;rsquo;s Web API. These operations are secured using portal&amp;rsquo;s application session, as explained here. Often there are requirements to consume an externally hosted API, in this particular example an API hosted in Azure behind an API Management. With Javascript the only option to trigger an API, implementing a secret based authentication is out of scope.</description>
    </item>
    <item>
      <title>Identity in Microsoft Azure - Modern Authentication</title>
      <link>http://localhost:1313/post/securingusingazure-part2/</link>
      <pubDate>Sun, 01 Aug 2021 18:06:02 +1000</pubDate>
      <guid>http://localhost:1313/post/securingusingazure-part2/</guid>
      <description>Introduction Continuing from the previous post, the new generation of authentication mechanism was created to satisfy the new generation of application, starting from apps that run just in the browser to apps that run on micro-controllers. This new generation of authentication mechanism called as the modern authentication protocols are built on top of the OAuth protocol and taking inspiration from SAML. In the below article the term IDP refers to the Identity provider, the external service that is responsible for authenticating a user and issuing authorization tokens.</description>
    </item>
    <item>
      <title>Identity in Microsoft Azure - A bit of history</title>
      <link>http://localhost:1313/post/securingusingazure-part1/</link>
      <pubDate>Sat, 24 Jul 2021 19:16:16 +1000</pubDate>
      <guid>http://localhost:1313/post/securingusingazure-part1/</guid>
      <description>Introduction Authentication has been an important component in the world of IT from the time companies required their employees to prove their identity to use the company&amp;rsquo;s computing resources whether it was to execute its business processes or accessing email or file. During the earlier days employees used to login to their computers using a username and password, which was stored in a central server like an active directory (in case of Microsoft tech stack).</description>
    </item>
  </channel>
</rss>
