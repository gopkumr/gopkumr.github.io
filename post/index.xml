<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Beneath Abstraction</title><link>https://www.beneathabstraction.com/post/</link><description>Recent content in Posts on Beneath Abstraction</description><generator>Hugo -- gohugo.io</generator><language>en-au</language><lastBuildDate>Wed, 27 Oct 2021 18:50:46 +1100</lastBuildDate><atom:link href="https://www.beneathabstraction.com/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Policy Execution in Azure APIM.</title><link>https://www.beneathabstraction.com/post/apimpolicyexecution/</link><pubDate>Wed, 27 Oct 2021 18:50:46 +1100</pubDate><guid>https://www.beneathabstraction.com/post/apimpolicyexecution/</guid><description>What are APIM Policies? APIM policies are statements executed by Azure APIM to modify the behavior of API request, response and exception flows. The logic/conditions written as part of the policies are executed at various stages of API execution like, request received (inbound), before request sent to backend service/API (backend), before sending response to requester (outbound) and in case of any exceptions during the request processing (on-error). Policies are defined as an XML format with different tag to define the execution stage and the actual policy.</description></item><item><title>How to move azure resources between resource groups</title><link>https://www.beneathabstraction.com/post/moveresources/</link><pubDate>Tue, 12 Oct 2021 17:20:59 +1100</pubDate><guid>https://www.beneathabstraction.com/post/moveresources/</guid><description>Problem While working with Azure cloud platform, often there will be instances where resources needs moving across resource groups for maintenance reasons or because of re-organising of products. There might even cases where the resource may need to be moved across subscriptions.
Solution In Azure resources can be moved across resource groups from the portal UI or Azure CLI or powershell or from the rest APIs. Moving the resource using the portal UI is as easy as going throught a wizard like steps and clicking finish at the end of it.</description></item><item><title>Deploying 'JUST' the modified ARM templates</title><link>https://www.beneathabstraction.com/post/selectedarmdeployment/</link><pubDate>Sun, 05 Sep 2021 10:00:46 +1000</pubDate><guid>https://www.beneathabstraction.com/post/selectedarmdeployment/</guid><description>Problem The project has a bunch of ARM templates as part of IAC scripts and more often only couple, if not few templates get modified. But when deploying using Azure pipeline all the templates gets deployed. Even though ARM template deployment support incremental mode, if a templates is deployed with exact same properties, the resource gets recreated. The project does not want to recreate all the templates when only a few are changed.</description></item><item><title>utterances: Comments section for your static web site</title><link>https://www.beneathabstraction.com/post/utterance/</link><pubDate>Fri, 13 Aug 2021 09:49:48 +1000</pubDate><guid>https://www.beneathabstraction.com/post/utterance/</guid><description>Problem When your website is a bunch of html, css, image and js files with no backend and is a blog (like mine) and you are expecting your readers to give feedback on your content and be interactive, you definitely need a comments section for your posts. Without an actual server for storage, it is impossible to implement user comments. With non revenue generating sites like mine it would not be an option to spend money every month to maintain few user comments if any.</description></item><item><title>Identity in Microsoft Azure - Modern Authentication</title><link>https://www.beneathabstraction.com/post/securingusingazure-part2/</link><pubDate>Sun, 01 Aug 2021 18:06:02 +1000</pubDate><guid>https://www.beneathabstraction.com/post/securingusingazure-part2/</guid><description>Introduction Continuing from the previous post, the new generation of authentication mechanism was created to satisfy the new generation of application, starting from apps that run just in the browser to apps that run on micro-controllers. This new generation of authentication mechanism called as the modern authentication protocols are built on top of the OAuth protocol and taking inspiration from SAML. In the below article the term IDP refers to the Identity provider, the external service that is responsible for authenticating a user and issuing authorization tokens.</description></item><item><title>Identity in Microsoft Azure - A bit of history</title><link>https://www.beneathabstraction.com/post/securingusingazure-part1/</link><pubDate>Sat, 24 Jul 2021 19:16:16 +1000</pubDate><guid>https://www.beneathabstraction.com/post/securingusingazure-part1/</guid><description>Introduction Authentication has been an important component in the world of IT from the time companies required their employees to prove their identity to use the company&amp;rsquo;s computing resources whether it was to execute its business processes or accessing email or file. During the earlier days employees used to login to their computers using a username and password, which was stored in a central server like an active directory (in case of Microsoft tech stack).</description></item><item><title>Cloud Resume Challenge - Azure Serverless</title><link>https://www.beneathabstraction.com/post/azureserverlessresume/</link><pubDate>Mon, 28 Jun 2021 10:18:48 +1100</pubDate><guid>https://www.beneathabstraction.com/post/azureserverlessresume/</guid><description>I recently came across the site https://cloudresumechallenge.dev/ and decided to give it a try using Azure services. To start simple I decided to ignore the DB, CDN part etc and just have the the UI and the middler layer of the app. Below is the high level architecture.
The front end of the app will be hosted a static web site in Azure Blob storage. Backend will be an Azure function that will feed the resume data to the frontend over HTTP, the azure function will be a HTTP triggered function.</description></item><item><title>Implementing Custom Feature flags - Your own logic to shutoff a feature - Azure App Configuration</title><link>https://www.beneathabstraction.com/post/azurecustomfeatureflags/</link><pubDate>Tue, 22 Jun 2021 10:18:48 +1100</pubDate><guid>https://www.beneathabstraction.com/post/azurecustomfeatureflags/</guid><description>This is a continuation from the previous article on feature flags implemented using Azure App configuration service to maintain the flags. Just to reiterate, feature management can be implemented using config files but this article is trying to implement feature flags connecting to Azure App configuration service.
Introduction The previous article described about implementing a boolean feature flag to turn on/off a feature. In this article I am trying to implement a custom feature flag.</description></item><item><title>Implementing Feature flags using azure</title><link>https://www.beneathabstraction.com/post/azurefeatureflags/</link><pubDate>Sun, 16 May 2021 10:00:48 +1100</pubDate><guid>https://www.beneathabstraction.com/post/azurefeatureflags/</guid><description>Feature flag is a very popular practice in modern application development, which is used to specifically hide features implemented that are not yet ready to be used by wider audience, and when ready can be enabled by a flip of a switch. The flags can also be used as a kill switch for application feature when it not working as expected.
With feature flags implemented, it would be effective to have the features enabled or disabled from a location outside of the application infrastructure or configuration, this way we can have features spanning across applications be controlled via a centralized flag.</description></item><item><title>Radio Player using Blazor 5</title><link>https://www.beneathabstraction.com/post/blazor5/</link><pubDate>Tue, 11 May 2021 16:35:28 +1000</pubDate><guid>https://www.beneathabstraction.com/post/blazor5/</guid><description>I have been reading the Blazor 5 documentation and decided to create a simple project to give its features a try. As always, there were a ton of ideas in my mind but while scanning through dev.to i came across a post by Aleks Popovic, where he made a Radio player using react, so i decided to create one using Blazor 5. I used the same service as Aleks to get the radio stations, called the Radio-Browser.</description></item><item><title>Switch off auto formatting in Visual Studio 2019</title><link>https://www.beneathabstraction.com/post/switchoffautoformating/</link><pubDate>Wed, 17 Feb 2021 08:51:19 +1100</pubDate><guid>https://www.beneathabstraction.com/post/switchoffautoformating/</guid><description>If you have landed here searching how to switch off auto formatting of code files in Visual Studio, you are either a code purist who does not like the formatting the IDE is performing or you are like me editing a large auto-generated class file (due to unfortunate situations) and Visual studio hangs or crashes on you every time you do a small change.
The good news is there is an option in the IDE to switch feature off.</description></item><item><title>Deploy Pihole on RaspberryPi ZeroW to adblock your home network</title><link>https://www.beneathabstraction.com/post/deploypihole/</link><pubDate>Wed, 10 Feb 2021 20:42:44 +1100</pubDate><guid>https://www.beneathabstraction.com/post/deploypihole/</guid><description>Problem We all have seen and annoyed seeing those google ads or facebook ads on websites and apps. Mostly of the times the ads over takes the actual content of the website, especially on those forums. Ads also shows up on free email services, apps on your phones, smart tv, they are everywhere. More than annoyance, they eat up a lot of bandwidth and ofter makes the website/apps slower to respond.</description></item><item><title>Migrated my blog out of Blogger</title><link>https://www.beneathabstraction.com/post/blogonhugo/</link><pubDate>Wed, 10 Feb 2021 18:07:46 +1100</pubDate><guid>https://www.beneathabstraction.com/post/blogonhugo/</guid><description>Problem While blogger is an amazing platform for hosting your blog, with perks of easy linking custom domains and google analytics integration, the main issue is with styling/rendering of your website and most of all blogger &amp;ldquo;owns&amp;rdquo; the content and if its decides it can just take it out or make parts paid. I had bitter experience with another hosting platform, where my account was in-accessible and had to spend hours writing to customer support with little support from them .</description></item><item><title>Infrastructure as C#</title><link>https://www.beneathabstraction.com/post/infraascsharp/</link><pubDate>Sun, 26 Jul 2020 18:52:19 +1100</pubDate><guid>https://www.beneathabstraction.com/post/infraascsharp/</guid><description>Introduction After attempting the .Net tutorial on deploying a simple WebAPI based microservice to Azure Kubernetes Service (AKS), wanted a better way to represent my infrastructure than the YAML.xml file. This was partly because of me being novice in YAML format and partly to have a way to abstract the infrastructure in order to make it repeatable and it should be not just confined to AKS. The first solution to this problem was to use a framework like Terraform to define my infrastructure as code.</description></item><item><title>Azure for integration and process automation</title><link>https://www.beneathabstraction.com/post/azureintegration/</link><pubDate>Sun, 21 Jun 2020 18:52:19 +1100</pubDate><guid>https://www.beneathabstraction.com/post/azureintegration/</guid><description>Problem Businesses run on multiple applications and services, how well the business runs is often impacted on how efficiently data is distributed to the correct task. Automating this flow of data is a way to streamline the business. The problem here is to choose the right technology for this data integration and process automation.
Objective This article is describing the azure technologies that are available during time of writing to solve the business need.</description></item><item><title>Steps for Deploying a Blazor as Static Site with Docker and Nginx</title><link>https://www.beneathabstraction.com/post/blazorhostdocker/</link><pubDate>Thu, 11 Jun 2020 18:52:19 +1100</pubDate><guid>https://www.beneathabstraction.com/post/blazorhostdocker/</guid><description>Step 1 Publish the Blazor WebAssembly project Publish the project from Visual Studio,this ensures that the projects is linked which removes all the unwanted dependencies from the output, reducing the size of the assemblies created.
Step 2 Create a dockerfile The docker file is very straightforward, pull the nginx image and copy the published Blazor WebAssembly file from the WWWRoot folder to the html folder in nginx
FROM nginx:alpine EXPOSE 80 COPY bin/Release/netcoreapp3.</description></item><item><title>Hosting Blazor WebAssembly on ASP.Net Core WebAPI</title><link>https://www.beneathabstraction.com/post/blazorhostwebapi/</link><pubDate>Tue, 09 Jun 2020 18:52:19 +1100</pubDate><guid>https://www.beneathabstraction.com/post/blazorhostwebapi/</guid><description>Background My WebAssembly project has now been configured to be a PWA (refer the previous article in series). It time to introduce hosting. Since the WebAssembly project handles the client side, I want it to be unchanged but be hosted it in a project that can be used as backend for the UI, hence chose WebAPI.
The Changes Create a new solution and add the already created Blazor WebAssembly project Add a new ASPNet core web project and choose WebAPI template and call it the .</description></item><item><title>How can I turn my Blazor WebAssembly to PWA?</title><link>https://www.beneathabstraction.com/post/blazorwasntopwa/</link><pubDate>Thu, 04 Jun 2020 18:52:19 +1100</pubDate><guid>https://www.beneathabstraction.com/post/blazorwasntopwa/</guid><description>Lets get started with an existing Blazor WebAssembly project I already have a Blazor WebAssembly project created implementing Angular Tour of heros application. You can find the project in my GitHub repository here Repo: https://github.com/gopkumr/BlazorTourOfHeroes.git Branch: Release
Next step is making this into PWA As with any web application, adding PWA capabilities to Blazor follows the web standard process of adding a manifest json file and the service workers js file.</description></item><item><title>An attempt to convert Blazor WebAssembly Project to Blazor Server App</title><link>https://www.beneathabstraction.com/post/blazorwebasmtoserv/</link><pubDate>Sat, 25 Apr 2020 18:52:19 +1100</pubDate><guid>https://www.beneathabstraction.com/post/blazorwebasmtoserv/</guid><description>Blazor Web-Assembly Project This starts from my Blazor Web-Assembly project that I create as a replica of the Angular TourOfHeros tutorial. The source code of project is in GitHub
This is an attempt to convert the existing project to a Blazor server app with few changes to the wiring up and hosting configuration. Since this article is written with a pre-release version of Blazor Web-Assembly, there could be changes to the steps after the actual release expected in May 2020.</description></item><item><title>a sneak peek into Blazor WebAssembly</title><link>https://www.beneathabstraction.com/post/introblazor/</link><pubDate>Sun, 12 Jan 2020 18:52:19 +1100</pubDate><guid>https://www.beneathabstraction.com/post/introblazor/</guid><description>an attempt to create tour of heroes' using Blazor preface WebAssembly is an exciting piece of software, along with HTML, CSS and JavaScript WebAssembly (or WASM) is the fourth language that modern browsers can run natively, WASM is run in the browser in the same security sandbox as the JavaScript frameworks run. WASM also lets you invoke JavaScript and vice versa, making it coexist with JavaScript, More on WebAssembly here: https://webassembly.</description></item><item><title>Tired of updating namespaces? With VS2019 you won't.</title><link>https://www.beneathabstraction.com/post/namespaceupdate/</link><pubDate>Thu, 17 Oct 2019 18:50:46 +1100</pubDate><guid>https://www.beneathabstraction.com/post/namespaceupdate/</guid><description>Most of us programmers would have moved code files around to different folders at a different stages of the application development, this might be due to refactoring or redesigning or re-organizing. While moving around the code files, most .Net developers would have spent enough time changing the namespaces to match the folder structure (as better practice).
With Visual Studio 2019, this mundane task of changing the namespaces while moving folder is now automated, which means, visual studio updates the namespace to match the folder structure by itself.</description></item><item><title>A brave move by Brave</title><link>https://www.beneathabstraction.com/post/brave/</link><pubDate>Tue, 20 Aug 2019 18:39:11 +1100</pubDate><guid>https://www.beneathabstraction.com/post/brave/</guid><description>Current online ads landscape
Advertisers and publishers are always in search of targeting the right user group and the actual presenting of ads to the user. Users are the most undervalued actor of the use case. The ads intrude into the viewing area, uses up bandwidth, make the overall experience poor. In most cases, the users enjoy the service for free by viewing the ads e.g. Youtube. Brave browser has taken this use case and improvised to make it a win-win situation for all.</description></item><item><title>ASP.Net MVC 5 and Security</title><link>https://www.beneathabstraction.com/post/mvc5security/</link><pubDate>Sat, 14 Oct 2017 10:51:44 +1100</pubDate><guid>https://www.beneathabstraction.com/post/mvc5security/</guid><description>Security? Security is one of the most important cross-cutting concern for any web application. All applications (except for static web sites) require to identify a user and restrict the users from viewing or performing actions on pages.
Authentication Authentication is the method by which an application identifies a user. By identifying a user, the application can decide whether the user is a valid user to access the application.
Authorization Authorization is the way the application decides if the identified user can view a particular page or perform a particular action.</description></item><item><title>Clean your code using Code cleanup in Visual Studio 2019</title><link>https://www.beneathabstraction.com/post/vs2019codecleanup/</link><pubDate>Fri, 16 Sep 2016 14:22:48 +1100</pubDate><guid>https://www.beneathabstraction.com/post/vs2019codecleanup/</guid><description>All we developers would have spent time in cleaning up the code after we are done with a long day of code and coffee! for .Net developers it is to do with removing all the using clause added automatically by visual studio/nuget that you no longer need, removing variables that was not put to use, adding read only to eligible private variables, adding or removing braces from single statement blocks etc etc.</description></item></channel></rss>